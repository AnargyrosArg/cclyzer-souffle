.decl _add_instruction_first_operand(v0:symbol, v1:symbol)
.input _add_instruction_first_operand(IO="file", delimiter="\t", filename="facts/add_instruction-first_operand.dlm")

add_instruction_first_operand(v0, v1) :-
   add_instruction(v0),
   operand(v1),
   _add_instruction_first_operand(v0, v1).


.decl _add_instruction_second_operand(v0:symbol, v1:symbol)
.input _add_instruction_second_operand(IO="file", delimiter="\t", filename="facts/add_instruction-second_operand.dlm")

add_instruction_second_operand(v0, v1) :-
   add_instruction(v0),
   operand(v1),
   _add_instruction_second_operand(v0, v1).


.decl _sub_instruction_first_operand(v0:symbol, v1:symbol)
.input _sub_instruction_first_operand(IO="file", delimiter="\t", filename="facts/sub_instruction-first_operand.dlm")

sub_instruction_first_operand(v0, v1) :-
   sub_instruction(v0),
   operand(v1),
   _sub_instruction_first_operand(v0, v1).


.decl _sub_instruction_second_operand(v0:symbol, v1:symbol)
.input _sub_instruction_second_operand(IO="file", delimiter="\t", filename="facts/sub_instruction-second_operand.dlm")

sub_instruction_second_operand(v0, v1) :-
   sub_instruction(v0),
   operand(v1),
   _sub_instruction_second_operand(v0, v1).


.decl _mul_instruction_first_operand(v0:symbol, v1:symbol)
.input _mul_instruction_first_operand(IO="file", delimiter="\t", filename="facts/mul_instruction-first_operand.dlm")

mul_instruction_first_operand(v0, v1) :-
   mul_instruction(v0),
   operand(v1),
   _mul_instruction_first_operand(v0, v1).


.decl _mul_instruction_second_operand(v0:symbol, v1:symbol)
.input _mul_instruction_second_operand(IO="file", delimiter="\t", filename="facts/mul_instruction-second_operand.dlm")

mul_instruction_second_operand(v0, v1) :-
   mul_instruction(v0),
   operand(v1),
   _mul_instruction_second_operand(v0, v1).


.decl _fadd_instruction_first_operand(v0:symbol, v1:symbol)
.input _fadd_instruction_first_operand(IO="file", delimiter="\t", filename="facts/fadd_instruction-first_operand.dlm")

fadd_instruction_first_operand(v0, v1) :-
   fadd_instruction(v0),
   operand(v1),
   _fadd_instruction_first_operand(v0, v1).


.decl _fadd_instruction_second_operand(v0:symbol, v1:symbol)
.input _fadd_instruction_second_operand(IO="file", delimiter="\t", filename="facts/fadd_instruction-second_operand.dlm")

fadd_instruction_second_operand(v0, v1) :-
   fadd_instruction(v0),
   operand(v1),
   _fadd_instruction_second_operand(v0, v1).


.decl _fsub_instruction_first_operand(v0:symbol, v1:symbol)
.input _fsub_instruction_first_operand(IO="file", delimiter="\t", filename="facts/fsub_instruction-first_operand.dlm")

fsub_instruction_first_operand(v0, v1) :-
   fsub_instruction(v0),
   operand(v1),
   _fsub_instruction_first_operand(v0, v1).


.decl _fsub_instruction_second_operand(v0:symbol, v1:symbol)
.input _fsub_instruction_second_operand(IO="file", delimiter="\t", filename="facts/fsub_instruction-second_operand.dlm")

fsub_instruction_second_operand(v0, v1) :-
   fsub_instruction(v0),
   operand(v1),
   _fsub_instruction_second_operand(v0, v1).


.decl _fmul_instruction_first_operand(v0:symbol, v1:symbol)
.input _fmul_instruction_first_operand(IO="file", delimiter="\t", filename="facts/fmul_instruction-first_operand.dlm")

fmul_instruction_first_operand(v0, v1) :-
   fmul_instruction(v0),
   operand(v1),
   _fmul_instruction_first_operand(v0, v1).


.decl _fmul_instruction_second_operand(v0:symbol, v1:symbol)
.input _fmul_instruction_second_operand(IO="file", delimiter="\t", filename="facts/fmul_instruction-second_operand.dlm")

fmul_instruction_second_operand(v0, v1) :-
   fmul_instruction(v0),
   operand(v1),
   _fmul_instruction_second_operand(v0, v1).


.decl _fdiv_instruction_first_operand(v0:symbol, v1:symbol)
.input _fdiv_instruction_first_operand(IO="file", delimiter="\t", filename="facts/fdiv_instruction-first_operand.dlm")

fdiv_instruction_first_operand(v0, v1) :-
   fdiv_instruction(v0),
   operand(v1),
   _fdiv_instruction_first_operand(v0, v1).


.decl _fdiv_instruction_second_operand(v0:symbol, v1:symbol)
.input _fdiv_instruction_second_operand(IO="file", delimiter="\t", filename="facts/fdiv_instruction-second_operand.dlm")

fdiv_instruction_second_operand(v0, v1) :-
   fdiv_instruction(v0),
   operand(v1),
   _fdiv_instruction_second_operand(v0, v1).


.decl _variable_has_type(v0:symbol, v1:symbol)
.input _variable_has_type(IO="file", delimiter="\t", filename="facts/variable-type.dlm")

variable(v0), type(v1), variable_has_type(v0, v1) :-
   _variable_has_type(v0, v1).


.decl _constant_has_type(v0:symbol, v1:symbol)
.input _constant_has_type(IO="file", delimiter="\t", filename="facts/constant-type.dlm")

constant(v0), type(v1), constant_has_type(v0, v1) :-
   _constant_has_type(v0, v1).


.decl _type_has_size(v0:symbol, v1:number)
.input _type_has_size(IO="file", delimiter="\t", filename="facts/type-size.dlm")

type(v0), type_has_size(v0, v1) :-
   _type_has_size(v0, v1).


.decl _type_has_unpadded_size(v0:symbol, v1:number)
.input _type_has_unpadded_size(IO="file", delimiter="\t", filename="facts/type-size.dlm")

type(v0), type_has_unpadded_size(v0, v1) :-
   _type_has_unpadded_size(v0, v1).


.decl _instruction_assigns_to(v0:symbol, v1:symbol)
.input _instruction_assigns_to(IO="file", delimiter="\t", filename="facts/instruction-to.dlm")

instruction(v0), variable(v1), instruction_assigns_to(v0, v1) :-
   _instruction_assigns_to(v0, v1).


.decl _vector_type_has_component(v0:symbol, v1:symbol)
.input _vector_type_has_component(IO="file", delimiter="\t", filename="facts/vector_type-component.dlm")

vector_type(v0), type(v1), vector_type_has_component(v0, v1) :-
   _vector_type_has_component(v0, v1).


.decl _vector_type_has_size(v0:symbol, v1:number)
.input _vector_type_has_size(IO="file", delimiter="\t", filename="facts/vector_type-size.dlm")

vector_type(v0), vector_type_has_size(v0, v1) :-
   _vector_type_has_size(v0, v1).


.decl _array_type_has_component(v0:symbol, v1:symbol)
.input _array_type_has_component(IO="file", delimiter="\t", filename="facts/array_type-component.dlm")

array_type(v0), type(v1), array_type_has_component(v0, v1) :-
   _array_type_has_component(v0, v1).


.decl _array_type_has_size(v0:symbol, v1:number)
.input _array_type_has_size(IO="file", delimiter="\t", filename="facts/array_type-size.dlm")

array_type(v0), array_type_has_size(v0, v1) :-
   _array_type_has_size(v0, v1).


.decl _pointer_type_has_component(v0:symbol, v1:symbol)
.input _pointer_type_has_component(IO="file", delimiter="\t", filename="facts/pointer_type-component.dlm")

pointer_type(v0), type(v1), pointer_type_has_component(v0, v1) :-
   _pointer_type_has_component(v0, v1).


.decl _pointer_type_has_addr_space(v0:symbol, v1:number)
.input _pointer_type_has_addr_space(IO="file", delimiter="\t", filename="facts/pointer_type-addr_space.dlm")

pointer_type(v0), pointer_type_has_addr_space(v0, v1) :-
   _pointer_type_has_addr_space(v0, v1).
